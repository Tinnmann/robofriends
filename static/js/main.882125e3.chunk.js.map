{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","cardComponent","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filtererdRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAeeA,EAbF,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,GAE3B,OACC,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAM,cAAcC,IAAG,+BAA0BH,EAA1B,cAC5B,gCACC,6BAAKF,IACL,4BAAIC,WCKOK,EAXE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACbC,EAAgBD,EAAOE,KAAI,SAACC,EAAMC,GACvC,OAAO,cAAC,EAAD,CAAcT,GAAIK,EAAOI,GAAGT,GAAIF,KAAMO,EAAOI,GAAGX,KAAMC,MAAOM,EAAOI,GAAGV,OAA5DU,MAEnB,OACG,8BACGH,KCGQI,EAVG,SAAC,GAA8B,EAA7BC,YAA8B,IAAjBC,EAAgB,EAAhBA,aAChC,OACC,qBAAKX,UAAU,MAAf,SACC,uBAAOA,UAAU,mCACjBY,KAAK,SACLC,YAAY,gBAAgBC,SAAUH,OCG1BI,EARA,SAACC,GACf,OACC,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACEJ,EAAMK,YC+CKC,E,kDA5Cd,aAAc,IAAD,8BACZ,gBAgBDC,eAAgB,SAACC,GAChB,EAAKC,SAAS,CAACf,YAAac,EAAME,OAAOC,SAhBzC,EAAKC,MAAQ,CACZxB,OAAQ,GACRM,YAAa,IAJF,E,gEAQO,IAAD,OAClBmB,MAAM,8CAA8CC,MAAK,SAAAC,GACxD,OAAOA,EAASC,UACdF,MAAK,SAAAG,GACP,EAAKR,SAAS,CAAErB,OAAQ6B,S,+BAQjB,IAAD,EACyBC,KAAKN,MAA7BxB,EADD,EACCA,OAAQM,EADT,EACSA,YACVyB,EAAkB/B,EAAOgC,QAAO,SAAAC,GACrC,OAAOA,EAAMxC,KAAKyC,cAAcC,SAAS7B,EAAY4B,kBAGtD,OAAoB,IAAhBlC,EAAOoC,OACH,yCAGN,sBAAKxC,UAAU,KAAf,UACC,6CACA,cAAC,EAAD,CAAWW,aAAcuB,KAAKX,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,CAAUnB,OAAU+B,a,GAnCRM,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCGdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.882125e3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id}) =>{\r\n\t//const {name, email, id} = props;\r\n\treturn (\r\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<img alt = 'robot photo' src={`https://robohash.org/${id}?200x200`} />\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n\tconst cardComponent = robots.map((user, i)=>{\r\n\t\treturn <Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email} />\r\n\t})\r\n\treturn (\r\n\t  \t<div>\r\n\t    \t{cardComponent}\r\n\t   \t</div>\t\t\r\n\t);\r\n}\r\n\r\nexport default CardList","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange})=>{\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t\t<input className='pa3 ba b--green bg-lightest-blue' \r\n\t\t\ttype='search' \r\n\t\t\tplaceholder='search robots' onChange={searchChange} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) =>{\r\n\treturn (\r\n\t\t<div style={{overflowY: 'scroll', border: '1px solid black', height: '500px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\n//import { robots } from './robots';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\n\r\n\r\nclass App extends Component {\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield: ''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users').then(response=>{\r\n\t\t\treturn response.json();\r\n\t\t}).then(users=>{\r\n\t\t\tthis.setState({ robots: users })\r\n\t\t});\r\n\t\t\r\n\t}\r\n\r\n\tonSearchChange= (event)=>{\r\n\t\tthis.setState({searchfield: event.target.value})\r\n\t}\r\n\trender(){\r\n\t\tconst { robots, searchfield } = this.state;\r\n\t\tconst filtererdRobots = robots.filter(robot=>{\r\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\t\t})\r\n\t\t//console.log(filtererdRobots);\t\r\n\t\tif (robots.length===0){\r\n\t\t\treturn <h1>Loading</h1>\r\n\t\t} else {\r\n\t\t\treturn(\r\n\t\t\t\t<div className='tc'>\r\n\t\t\t\t\t<h1>RoboFriends</h1>\r\n\t\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t\t\t\t<Scroll>\r\n\t\t\t\t\t\t<CardList robots = {filtererdRobots}/>\r\n\t\t\t\t\t</Scroll>\r\n\t\t\t\t</div>\r\n\t\t\t);\t\t\t\t\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\n//import Card from './Card';\nimport CardList from './components/CardList';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport { robots } from './robots';\n\nReactDOM.render(\n  <React.StrictMode>\n  \t<App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}